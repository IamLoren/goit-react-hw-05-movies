{"version":3,"file":"static/js/634.02de1cee.chunk.js","mappings":"4QAEaA,EAAWC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6V,SCoBjC,EAnBmB,SAAHC,GAA+C,IAA1CC,EAAcD,EAAdC,eAAgBC,EAAOF,EAAPE,QAASC,EAAUH,EAAVG,WACnCC,EAAuCH,EAAvCG,KAAMC,EAAiCJ,EAAjCI,SAAUC,EAAuBL,EAAvBK,YAAaC,EAAUN,EAAVM,OACtC,OACEC,EAAAA,EAAAA,MAACZ,EAAQ,CAAAa,SAAA,EACLD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,OAAMD,SAAA,EACjBE,EAAAA,EAAAA,KAAA,OAAKC,IAAKN,EAAW,sCAAAO,OAAyCP,GAAgB,mKAAoKQ,IAAI,SAASC,MAAM,MAAML,UAAU,YACrRF,EAAAA,EAAAA,MAAA,OAAKE,UAAU,UAASD,SAAA,EACtBD,EAAAA,EAAAA,MAAA,QAAME,UAAU,OAAMD,SAAA,CAAC,SAAOL,GAAc,2BAA2B,SACzEI,EAAAA,EAAAA,MAAA,QAAME,UAAU,WAAUD,SAAA,CAAC,aAAWJ,GAAsB,wCAAwC,SACpGG,EAAAA,EAAAA,MAAA,QAAME,UAAU,SAAQD,SAAA,CAAC,kBAAgBF,YAI7CI,EAAAA,EAAAA,KAAA,KAAGD,UAAU,SAAQD,SAAEP,KACvBS,EAAAA,EAAAA,KAAA,KAAAF,SAAIN,MAGZ,ECiBA,EA/BgB,WACd,IAAOa,GAAYC,EAAAA,EAAAA,MAAZD,QACPE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAiBlC,OAhBAI,QAAQC,IAAIT,IAEdU,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAA3B,GAAA4B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEIC,EAAAA,EAAAA,GAAa,UAADtB,OAAWG,EAAO,aAAY,KAAD,EAArDe,EAAGC,EAAAI,KACTb,EAAeQ,EAAIM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BR,QAAQC,IAAGO,EAAAM,IAAO,yBAAAN,EAAAO,OAAA,GAAAT,EAAA,kBAErB,kBAPc,OAAA9B,EAAAwC,MAAA,KAAAC,UAAA,KAQfd,GACF,GAAE,CAACX,IAEHQ,QAAQC,IAAIH,IAGRX,EAAAA,EAAAA,KAAA+B,EAAAA,SAAA,CAAAjC,SACCa,EAAYqB,OAAS,GAAKhC,EAAAA,EAAAA,KAACiC,EAAQ,CAAAnC,SACjCa,EAAYuB,KAAI,SAAAC,EAAwCC,GAAW,IAAjD9C,EAAc6C,EAAd7C,eAAgBC,EAAO4C,EAAP5C,QAASC,EAAU2C,EAAV3C,WAC1C,OAAOQ,EAAAA,EAAAA,KAACqC,EAAU,CAAa/C,eAAgBA,EAAgBC,QAASA,EAASC,WAAYA,GAArE4C,EAC1B,OAEFpC,EAAAA,EAAAA,KAAA,KAAAF,SAAG,0CAGP,EAIMmC,EAAW/C,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kE","sources":["components/ReviewCard/ReviewCard.js","components/ReviewCard/ReviewCard.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StyledLi = styled.li`\r\n    list-style: none;\r\n    width: 1400px;\r\n\r\n& .user {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 20px;\r\n\r\n    & img {\r\n        width: 100px;\r\n        height: 100px;\r\n        object-fit: cover;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    & span {\r\n        display: block;\r\n    }\r\n\r\n    \r\n}\r\n& p {\r\n        width: 100%;\r\n    }\r\n`","import React from 'react';\r\nimport {StyledLi} from '../ReviewCard/ReviewCard'\r\n\r\nconst ReviewCard = ({author_details, content, created_at}) => {\r\n    const {name, username, avatar_path, rating} = author_details;\r\n  return (\r\n    <StyledLi>\r\n        <div className=\"user\">\r\n            <img src={avatar_path ? `https://image.tmdb.org/t/p/original${avatar_path}` : 'https://img.freepik.com/premium-vector/question-mark-in-person-head-icon-as-unknown-secret-anonym-user-profile-or-doubt-secret-brain-mind_101884-2200.jpg?w=2000'} alt=\"avatar\" width='100' className=\"avatar\" />\r\n            <div className=\"wrapper\">\r\n              <span className=\"name\">Name: {name ? name : \"wished to remain unknown\"}; </span>\r\n            <span className=\"userName\">Username: {username ? username : \"considers their name beautiful enough\"}; </span>\r\n            <span className=\"rating\">User`s rating: {rating}</span>\r\n            </div>\r\n            \r\n        </div>\r\n        <p className=\"review\">{content}</p>\r\n        <p>{created_at}</p>\r\n    </StyledLi>\r\n  )\r\n}\r\n\r\nexport default ReviewCard","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getAllMovies } from \"services/api.js\";\r\nimport ReviewCard from \"components/ReviewCard/ReviewCard.jsx\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Reviews = () => {\r\n  const {movieId} =  useParams();\r\n  const [arrOfReview, setArrOfReview] = useState([]);\r\n  console.log(movieId)\r\n\r\nuseEffect(() => {\r\n  const getMovies = async () => {\r\n    try {\r\n      const res = await getAllMovies(`/movie/${movieId}/reviews`);\r\n      setArrOfReview(res.results);\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  getMovies()\r\n},[movieId])\r\n\r\nconsole.log(arrOfReview)\r\n\r\n  return (\r\n    <>\r\n    {arrOfReview.length > 0 ?  <StyledUl>\r\n      {arrOfReview.map(({author_details, content, created_at}, index) => {\r\n        return <ReviewCard key={index} author_details={author_details} content={content} created_at={created_at}/>\r\n      })}\r\n    </StyledUl> \r\n  : <p>Sorry, but we don`t have any reviews</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Reviews\r\n\r\nconst StyledUl = styled.ul`\r\nwidth: 100%;\r\npadding-right: 30px;\r\npadding-left: 30px;\r\n`"],"names":["StyledLi","styled","_templateObject","_taggedTemplateLiteral","_ref","author_details","content","created_at","name","username","avatar_path","rating","_jsxs","children","className","_jsx","src","concat","alt","width","movieId","useParams","_useState","useState","_useState2","_slicedToArray","arrOfReview","setArrOfReview","console","log","useEffect","getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","getAllMovies","sent","results","t0","stop","apply","arguments","_Fragment","length","StyledUl","map","_ref2","index","ReviewCard"],"sourceRoot":""}