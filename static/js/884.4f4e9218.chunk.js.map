{"version":3,"file":"static/js/884.4f4e9218.chunk.js","mappings":"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","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import { useState, useEffect, useRef, Suspense } from 'react';\r\nimport { Outlet, useParams, Link, useNavigate, useLocation} from 'react-router-dom';\r\nimport Header from '../components/Header/Header.jsx';\r\nimport { getAllMovies } from 'services/api.js';\r\nimport styled from 'styled-components';\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n  const [result, setResult] = useState({});\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const goBackRef = useRef(location.state?.from || '/')\r\n\r\n  useEffect(() => {\r\n    const getMovies = async () => {\r\n      try {\r\n        const res = await getAllMovies(`/movie/${movieId}`);\r\n        setResult(res);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getMovies();\r\n  }, [movieId]);\r\n\r\n  const {\r\n    original_title,\r\n    release_date,\r\n    poster_path,\r\n    vote_average,\r\n    overview,\r\n    genres,\r\n  } = result;\r\n\r\n  const handleGoBack = () => {\r\n    navigate(goBackRef.current);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <StyledSection>\r\n        <div className=\"container\">\r\n          <button  onClick={handleGoBack}>Go back</button>\r\n          <div className=\"generalInformation\">\r\n            <img\r\n              src={\r\n                poster_path\r\n                  ? `https://image.tmdb.org/t/p/original${poster_path}`\r\n                  : 'https://img.freepik.com/free-vector/shot-concept-illustration_114360-7065.jpg?w=826&t=st=1702759958~exp=1702760558~hmac=ac147e6f1032e40ad076c4ad24885e18d2ca16dddb473b0fbb77c6911c57f43e'\r\n              }\r\n              alt=\"poster\"\r\n              width=\"300\"\r\n              height=\"470\"\r\n              loading=\"lazy\"\r\n              className=\"poster\"\r\n            />\r\n            <div className=\"description\">\r\n              <h1 className=\"title\">\r\n                {original_title} (\r\n                {release_date ? release_date.slice(0, 4) : null})\r\n              </h1>\r\n              <p className=\"score\">\r\n                User Score: {`${Math.round(vote_average * 10)}%`}\r\n              </p>\r\n              <h2 className=\"overwiew\">Overwiew</h2>\r\n              <p>{overview}</p>\r\n              <h2 className=\"genres\">Genres</h2>\r\n              <p className=\"genresList\">\r\n                {genres\r\n                  ? genres.map((genre, index) => {\r\n                      return <span key={index}>{genre.name} </span>;\r\n                    })\r\n                  : null}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </StyledSection>\r\n      <StyledSection className=\"additional\">\r\n        <div className=\"container\">\r\n          <h3>Additional information</h3>\r\n          <StyledLink to=\"cast\">Cast</StyledLink>\r\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\r\n          <Suspense fallback={<h2>Loading...</h2>}>\r\n             <Outlet /> \r\n          </Suspense>\r\n        </div>\r\n        \r\n      </StyledSection>\r\n    </>\r\n  );\r\n};\r\nexport default MovieDetails;\r\n\r\n\r\nconst StyledSection = styled.section `\r\n& .container {\r\n  width: 100%;\r\n  padding-right: 20px;\r\n  padding-left: 20px;\r\n}\r\n\r\n& .generalInformation {\r\n  display: flex;\r\n  gap: 30px;\r\n}\r\n\r\n& .description {\r\n  width: 50%;\r\n}\r\n\r\n& button {\r\n  width: 100px;\r\n  height: 30px;\r\n  background-colot: transparent;\r\n  border: 1px solid gray;\r\n  color: gray;\r\n  font-weight: 700;\r\n  margin: 20px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n\r\n  &:hover {\r\n    border-color: red;\r\n    color: red\r\n  }\r\n}\r\n`\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: block;\r\n  font-size: 25px;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  color: black;\r\n  margin-bottom: 20px;\r\n  cursor: pointer;\r\n`"],"names":["_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","result","setResult","navigate","useNavigate","location","useLocation","goBackRef","useRef","state","from","useEffect","getMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","res","_context","prev","next","getAllMovies","concat","sent","t0","console","log","stop","apply","arguments","original_title","release_date","poster_path","vote_average","overview","genres","_jsxs","_Fragment","children","_jsx","Header","StyledSection","className","onClick","current","src","alt","width","height","loading","slice","Math","round","map","genre","index","name","StyledLink","to","Suspense","fallback","Outlet","styled","_templateObject","_taggedTemplateLiteral","Link","_templateObject2"],"sourceRoot":""}